version: '3.7'

services:

  prometheus:
    image: prom/prometheus:v2.24.1
    command:
      # Copied from Dockerfile because we lose existing commands, when defining new ones
      # https://github.com/prometheus/prometheus/blob/master/Dockerfile
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      # Increase the storage retention to 12 weeks
      - "--storage.tsdb.retention.time=12w"
    restart: unless-stopped
    networks:
      # Prometheus needs access to basically all networks in order to scrape the metrics
      - monitoring
      - faf
    extra_hosts:
      - "dockerhost:${HOST_IP}"
    volumes:
      - ./config/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAINNAME}`)"
      - "traefik.http.routers.prometheus.entryPoints=web-secure"
      - "traefik.http.routers.prometheus.middlewares=prometheus-auth"
      - "traefik.http.middlewares.prometheus-auth.basicauth.users=${PROMETHEUS_USERNAME}:${PROMETHEUS_PASSWORD}"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana:7.4.1
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - ./data/grafana:/var/lib/grafana
    env_file: config/monitoring/grafana/grafana.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAINNAME}`)"
      - "traefik.http.routers.grafana.entryPoints=web-secure"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  mysql-exporter:
    image: prom/mysqld-exporter
    restart: unless-stopped
    networks:
      # mysqld-exporter needs access to the MySQL database
      - monitoring
      - faf
    env_file: config/monitoring/mysql-exporter/mysql-exporter.env
    expose:
      - "9104"

  node-exporter:
    image: prom/node-exporter
    restart: unless-stopped
    expose:
      - "9100"
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - "8080"

networks:
  monitoring:
    driver: bridge
